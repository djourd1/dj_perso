blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
hugo new --kind publication publication/<my-publication>
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
(0.1 * 0.2 * 0.3)
(0.1 * 0.2 * 0.3)^(1/3)
((1+0.1) * (1+0.2) * (1+0.3))^(1/3)
((1+0.1) * (1+0.2) * (1-0.3))^(1/3)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
16000/5
hugo
640+1280
1920+1400
+1000/4
+1000/4/2
+32/4
200*200*3*3
200*200*3*3/1000
100*200*3*3/1000
install.packages("margins")
hugo
hugo
hugo
install.packages("RtutoR")
install.packages(c("backports", "callr", "conquer", "Deriv", "dplyr", "glue", "jsonlite", "kableExtra", "lmtest", "maptools", "maxLik", "mnormt", "processx", "psych", "quantreg", "RcppArmadillo", "stringi", "tidyr", "vctrs", "xfun", "zip"))
library(RtutoR)
install.rtutor(update.github=TRUE)
install.rtutor = function(update.cran=FALSE, update.github=TRUE, lib=.libPaths()[1], upgrade="never", force=TRUE,...) {
cat("\nInstall required packages from CRAN...")
# Avoid devtools::install_github warnings converted to errors
# See https://remotes.r-lib.org/#environment-variables
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")
pkgs = c("withr","devtools","whisker","stringr","jsonlite","data.table","markdown","DT","dplyr","shiny","shinyBS","hwriter","lmtest","texreg","RCurl", "memoise","shinyAce","restorepoint")
for (pkg in pkgs) {
if (!update.cran) {
if (!require(pkg, character.only=TRUE) | update.cran)
try(install.packages(pkg,lib=lib))
} else {
try(detach(paste0("package:",pkg), character.only=TRUE, force=TRUE), silent=TRUE)
try(install.packages(pkg,lib=lib))
}
}
cat("\nInstall required packages from Github...")
# Install packages from Github
repos = c(
"skranz/stringtools",
"skranz/shinyEvents",
"skranz/dplyrExtras",
"skranz/regtools",
"skranz/RTutor"
)
library(withr)
for (repo in repos) {
pkg = strsplit(repo,"/", fixed=TRUE)[[1]][2]
if (!update.github) {
if (!require(pkg, character.only=TRUE) | overwrite.github)
try(with_libpaths(new = lib, devtools::install_github(repo=repo, upgrade=upgrade,...)))
} else {
try(detach(paste0("package:",pkg), character.only=TRUE,force=TRUE), silent=TRUE)
try(with_libpaths(new = lib, devtools::install_github(repo=repo, upgrade=upgrade, force=force,...)))
}
}
library(RTutor)
}
install.rtutor(update.github=TRUE)
library(RTutor)
